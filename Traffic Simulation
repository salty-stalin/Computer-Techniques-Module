# -*- coding: utf-8 -*-
"""
Created on Sat Feb  1 18:44:37 2020

@author: User
"""
import random
import numpy as np
import time
import matplotlib.pyplot as plt
import matplotlib.ticker as plticker
import matplotlib.animation as animation 

Vmax=5
v=np.random.rand(30) #generate random velocities
v2=np.round(v*Vmax,decimals=0)
#print(v2)

positions=random.sample(range(300), 30)
#print(positions)
x_grid=np.empty(300)
#print(x_grid)
positions=np.append(positions,[299])
v2=np.append(v2,[5])
positions=np.append(positions,[1])
v2=np.append(v2,[0])
car=np.vstack((positions,v2))

print(car)
#time.sleep(3)
fuck=car
#print(fuck)
#time.sleep(3)
#print(car.shape)
#print(x_grid.shape)
for i in positions:
    j=int(i)
#    print(j)
    x_grid[j]=1

#print(x_grid)


np.random.seed(19680801)

x=np.zeros(32)
print(x.shape)
print(car[0,:].shape)







plt.yticks(np.arange(0,305,5))
plt.scatter(x, car[0,:], s=10, c=car[1,:], linestyle='-', linewidth=1 )
plt.grid(b=True,axis='y',alpha=1)

filename =(r"C:\Users\User\Desktop\Traffic Pictures\Plot.png")

plt.savefig(filename, dpi = 350)
plt.show()
plt.close()

def new_velocity(car1,x_grid1):
    new=-1
    
    for i in range(32):
        loop=False
        still_remember=0
#        print(car1[1,i])
#        print(car1[0,i])
#        print(x_grid1[int(car1[0,i])])
        if car1[1,i]<Vmax:
            
            car1[1,i]=car1[1,i]+1 #increase velocity by 1
#            print("new velocity " + str(car1[1,i]))
            overtake = True
            
            
                
            
            for j in range(1,int(car1[1,i])+1):
                j1=j+1 #seeker
#                print("j is " +str(j))
#                print("j1 is " +str(j1))
 #               print(x_grid[int(car[0,i])+j])
                
                if car1[0,i]+j1<=299 and loop==False:

                    if j1>car1[1,i]:
 #                       print("unobstructed drive")
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=car1[0,i]+car1[1,i]    
                        
                        x_grid1[int(car1[0,i])]=1
                        break
                    
                    if x_grid1[int(car1[0,i])+j] ==1 :
#                        print("car in front ")
                        car1[1,i]=0
                        break
                    
                    elif x_grid1[int(car1[0,i])+j] !=1 and x_grid1[int(car1[0,i])+j1] !=1 : 
#                        print(" we can keep driving")
                        overtake= True
                 
                    elif x_grid1[int(car1[0,i])+j] !=1 and x_grid1[int(car1[0,i])+j1] ==1 :
#                        print("Space occupied in front ")
                        overtake=False
                        x_grid1[int(car1[0,i])]=0
                        x_grid1[int(car1[0,i])+j]=1 
                        car1[1,i]=j
                        car1[0,i]=car1[0,i]+j
                        break
                
                elif car1[0,i]+j1>299 and j1>car1[1,i] and new==-1:
 #                   print("j1 " +str(j1))
 #                   print("velocity" + str(car1[1,i]))
                    x_grid1[int(car1[0,i])]=0
                    car1[0,i]=299
                    x_grid1[int(car1[0,i])]=1
                    car[1,0]=j
                    break
                
                elif car1[0,i]+j1>299 or loop==True:
                    loop=True
                    remember_start_position=299-car1[0,i]
                    if remember_start_position==299:
                        remember_start_position=still_remember
                        new= int(j-(remember_start_position))
                        new1=new+1
                    else:
                        
                        new= int(j-(remember_start_position))
                        new1=new+1
                        still_remember=remember_start_position
                            
                    
                    
                            
#                    print(x_grid1[int(car1[0,i])+new])
                    if x_grid1[0]==1:
 #                       print("car in spce 0")
                        
                        car1[1,i]=299-car1[0,i]
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=299
                        x_grid1[int(car1[0,i])]=1
                    elif x_grid1[0]!=1:
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=0
                        
 #                       print("temporarily stopping at first position")
 #                       print("new "+str(new))
  #                      print("new1 "+str(new1))
                        if new1>car1[1,i]:
#                            print("over 299 unobstructed drive")
                            x_grid1[int(car1[0,i])]=0
                            car1[0,i]=car1[0,i]+car1[1,i]    
                            
                            x_grid1[int(car1[0,i])+new]=1
                            break
                            
                        if x_grid1[int(car1[0,i])+new] ==1 :
#                            print("over 299 car in front ")
                            car1[1,i]=0
                            break
                        if x_grid1[int(car1[0,i])+new] !=1 and x_grid1[int(car1[0,i])+new1] !=1 and j1>car1[1,i] :
                            car1[0,i]=car1[0,i]+new
 #                           print("loop ending car velocity " +str(car1[1,i]))
                            break
                        elif x_grid1[int(car1[0,i])+new] !=1 and x_grid1[int(car1[0,i])+new1] !=1 : 
  #                          print(" over 299 we can keep driving")
                            #print(299-j)
                            overtake= True
                           # car1[0,i]=299-j
                         
                        elif x_grid1[int(car1[0,i])+new] !=1 and x_grid1[int(car1[0,i])+new1] ==1 :
  #                          print("over 299 Space occupied in front ")
                            overtake=False
                            x_grid1[int(car1[0,i])]=0
                            x_grid1[int(car1[0,i])+new]=1 
                            car1[1,i]=j
                            car1[0,i]=car1[0,i]+new
                            break
                            
            #future_space=(car[0,i]+car[1,i])
        elif car1[1,i]==Vmax:    
            overtake = True
            for j in range(1,int(car1[1,i])+1):
                j1=j+1 #seeker
 #               print(j)
 #               print(j1)
#                print(x_grid1[int(car1[0,i])+j])
#                print(x_grid1[int(car1[0,i])+j1])
                if car1[0,i]+j1<=299 and loop==False:
                    if j1>car1[1,i]:
  #                      print("unobstructed drive")
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=car1[0,i]+car1[1,i]    
                        
                        x_grid1[int(car1[0,i])]=1
                        break
                    if x_grid1[int(car1[0,i])+j] ==1 :
   #                     print("car in front ")
                        car1[1,i]=0
                        break
                    
                    elif x_grid1[int(car1[0,i])+j] !=1 and x_grid1[int(car1[0,i])+j1] !=1 : 
  #                      print(" we can keep driving")
                        overtake= True
                 
                    elif x_grid1[int(car1[0,i])+j] !=1 and x_grid1[int(car1[0,i])+j1] ==1 :
  #                      print("Space occupied in front ")
                        overtake=False
                        x_grid1[int(car1[0,i])]=0
                        x_grid1[int(car1[0,i])+j]=1 
                        car1[1,i]=j
                        car1[0,i]=car1[0,i]+j
                        break
                    elif car1[0,i]+j1>299 and j1>car1[1,i] and new==-1:
  #                      print("j1 " +str(j1))
  #                      print("velocity" + str(car1[1,i]))
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=299
                        x_grid1[int(car1[0,i])]=1
                        car[1,0]=j
                        break
                
                elif car1[0,i]+j1>299 or loop==True:
                    loop=True
                    remember_start_position=299-car1[0,i]
                    if remember_start_position==299:
                        remember_start_position=still_remember
                        new= int(j-(remember_start_position))
                        new1=new+1
                    else:
                        
                        new= int(j-(remember_start_position))
                        new1=new+1
                        still_remember=remember_start_position
                            
                    
                    
                            
                    #print(x_grid1[int(car1[0,i])+new])
                    if x_grid1[0]==1:
  #                      print("car in spce 0")
                        
                        car1[1,i]=299-car1[0,i]
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=299
                        x_grid1[int(car1[0,i])]=1
                    elif x_grid1[0]!=1:
                        x_grid1[int(car1[0,i])]=0
                        car1[0,i]=0
                        
  #                      print("temporarily stopping at first position")
  #                      print("new "+str(new))
  #                      print("new1 "+str(new1))
                        if new1>car1[1,i]:
   #                         print("over 299 unobstructed drive")
                            x_grid1[int(car1[0,i])]=0
                            car1[0,i]=car1[0,i]+car1[1,i]    
                            
                            x_grid1[int(car1[0,i])+new]=1
                            break
                            
                        if x_grid1[int(car1[0,i])+new] ==1 :
   #                         print("over 299 car in front ")
                            car1[1,i]=0
                            break
                        if x_grid1[int(car1[0,i])+new] !=1 and x_grid1[int(car1[0,i])+new1] !=1 and j1>car1[1,i] :
                            car1[0,i]=car1[0,i]+new
   #                         print("loop ending car velocity " +str(car1[1,i]))
                            break
                        elif x_grid1[int(car1[0,i])+new] !=1 and x_grid1[int(car1[0,i])+new1] !=1 : 
   #                         print(" over 299 we can keep driving")
                            #print(299-j)
                            overtake= True
                           # car1[0,i]=299-j
                         
                        elif x_grid1[int(car1[0,i])+new] !=1 and x_grid1[int(car1[0,i])+new1] ==1 :
    #                        print("over 299 Space occupied in front ")
                            overtake=False
                            x_grid1[int(car1[0,i])]=0
                            x_grid1[int(car1[0,i])+new]=1 
                            car1[1,i]=j
                            car1[0,i]=car1[0,i]+new
                            break
             


     #   print("new velocity " + str(car1[1,i]))
      #  print("new position " + str(car1[0,i]))
        
    return car1, x_grid1    




z,z1=new_velocity(car,x_grid)      
print(z)      

def traffic(car):
    mpl.style.use(sty)
    fig, ax = plt.subplots(figsize=(3, 3))

    ax.set_title('style: {!r}'.format(sty), color='C0')

    ax.plot(th, np.cos(th), 'C1', label='C1')
    ax.plot(th, np.sin(th), 'C2', label='C2')
    ax.legend()
